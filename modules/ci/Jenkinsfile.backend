pipeline {
    agent any

    environment {
        MAVEN_OPTS = "-Dmaven.repo.local=/var/jenkins_home/.m2/repository"
        MAVEN_SETTINGS = '/var/jenkins_home/.m2/settings.xml'
        NEXUS_URL = 'http://nexus:8081/repository/maven-releases'
        MAVEN_CLI_OPTS = '-B -ntp -Drevision=0.1.8'  // Добавляем revision здесь
        MODULE_PATH = 'backend'
    }

    stages {
        stage('Install Parent POM') {
            steps {
                sh 'mvn clean install -N -Drevision=0.1.8'
            }
        }
        
        stage('Build collect-metrics') {
            steps {
                dir("${env.WORKSPACE}") {
                    sh """
                        mvn ${MAVEN_CLI_OPTS} clean install -pl modules/collect-metrics -am -DskipTests
                    """
                }
            }
        }

        stage('Run Database Migration') {
            steps {
                dir("${env.WORKSPACE}") {
                    sh """
                        mvn ${MAVEN_CLI_OPTS} liquibase:update \
                            -pl ${MODULE_PATH} \
                            -Dliquibase.changeLogFile=src/main/resources/db/liquibase-config.xml \
                            -Dliquibase.url=jdbc:postgresql://postgres:5432/marketflow \
                            -Dliquibase.username=mf_user \
                            -Dliquibase.password=mf_pass
                    """
                }
            }
        }

        stage('Build and Test') {
            steps {
                script {
                    sh """
                        mvn ${MAVEN_CLI_OPTS} clean package -pl ${MODULE_PATH} -am
                    """
                }
            }
            post {
                always {
                    junit "**/target/surefire-reports/*.xml"
                }
            }
        }

        stage('Run Code Analysis') {
            steps {
                sh """
                    mvn ${MAVEN_CLI_OPTS} checkstyle:checkstyle pmd:pmd spotbugs:spotbugs \
                        -pl ${MODULE_PATH}
                """
            }
            post {
                always {
                    archiveArtifacts artifacts: 'backend/target/site/checkstyle.html', allowEmptyArchive: true
                }
            }
        }

        stage('Publish to Nexus') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'nexus-creds', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASS')]) {
                    sh """
                        mvn ${MAVEN_CLI_OPTS} deploy -DskipTests \
                            -pl ${MODULE_PATH} \
                            -DaltDeploymentRepository=nexus-releases::${NEXUS_URL} \
                            -Dnexus.username=${NEXUS_USER} \
                            -Dnexus.password=${NEXUS_PASS} \
                            --settings ${MAVEN_SETTINGS}
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Backend build completed successfully!'
        }
        failure {
            echo 'Backend build failed!'
        }
    }
}
